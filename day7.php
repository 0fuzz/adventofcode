<?php

// not bothering to clean it up :P

$program[0] = ['code' => [3,8,1001,8,10,8,105,1,0,0,21,42,67,88,101,114,195,276,357,438,99999,3,9,101,3,9,9,1002,9,4,9,1001,9,5,9,102,4,9,9,4,9,99,3,9,1001,9,3,9,1002,9,2,9,101,2,9,9,102,2,9,9,1001,9,5,9,4,9,99,3,9,102,4,9,9,1001,9,3,9,102,4,9,9,101,4,9,9,4,9,99,3,9,101,2,9,9,1002,9,3,9,4,9,99,3,9,101,4,9,9,1002,9,5,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,99],
                'optloc' => 0,
                 'finished' => false];
$program[1] = ['code' => [3,8,1001,8,10,8,105,1,0,0,21,42,67,88,101,114,195,276,357,438,99999,3,9,101,3,9,9,1002,9,4,9,1001,9,5,9,102,4,9,9,4,9,99,3,9,1001,9,3,9,1002,9,2,9,101,2,9,9,102,2,9,9,1001,9,5,9,4,9,99,3,9,102,4,9,9,1001,9,3,9,102,4,9,9,101,4,9,9,4,9,99,3,9,101,2,9,9,1002,9,3,9,4,9,99,3,9,101,4,9,9,1002,9,5,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,99],
                'optloc' => 0,
                 'finished' => false];
$program[2] = ['code' => [3,8,1001,8,10,8,105,1,0,0,21,42,67,88,101,114,195,276,357,438,99999,3,9,101,3,9,9,1002,9,4,9,1001,9,5,9,102,4,9,9,4,9,99,3,9,1001,9,3,9,1002,9,2,9,101,2,9,9,102,2,9,9,1001,9,5,9,4,9,99,3,9,102,4,9,9,1001,9,3,9,102,4,9,9,101,4,9,9,4,9,99,3,9,101,2,9,9,1002,9,3,9,4,9,99,3,9,101,4,9,9,1002,9,5,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,99],
                'optloc' => 0,
                 'finished' => false];
$program[3] = ['code' => [3,8,1001,8,10,8,105,1,0,0,21,42,67,88,101,114,195,276,357,438,99999,3,9,101,3,9,9,1002,9,4,9,1001,9,5,9,102,4,9,9,4,9,99,3,9,1001,9,3,9,1002,9,2,9,101,2,9,9,102,2,9,9,1001,9,5,9,4,9,99,3,9,102,4,9,9,1001,9,3,9,102,4,9,9,101,4,9,9,4,9,99,3,9,101,2,9,9,1002,9,3,9,4,9,99,3,9,101,4,9,9,1002,9,5,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,99],
'optloc' => 0,
                 'finished' => false];
$program[4] = ['code' => [3,8,1001,8,10,8,105,1,0,0,21,42,67,88,101,114,195,276,357,438,99999,3,9,101,3,9,9,1002,9,4,9,1001,9,5,9,102,4,9,9,4,9,99,3,9,1001,9,3,9,1002,9,2,9,101,2,9,9,102,2,9,9,1001,9,5,9,4,9,99,3,9,102,4,9,9,1001,9,3,9,102,4,9,9,101,4,9,9,4,9,99,3,9,101,2,9,9,1002,9,3,9,4,9,99,3,9,101,4,9,9,1002,9,5,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,99],
'optloc' => 0,
                 'finished' => false];
$phases = [5,6,7,8,9];

function nextPermutation($p, $size) {
    for ($i = $size - 1; $i>= 0 && $p[$i] >= $p[$i+1]; --$i) { }
    if ($i == -1) { return false; }
    for ($j = $size; $p[$j] <= $p[$i]; --$j) { }
    $tmp = $p[$i]; $p[$i] = $p[$j]; $p[$j] = $tmp;
    for (++$i, $j = $size; $i < $j; ++$i, --$j) {
         $tmp = $p[$i]; $p[$i] = $p[$j]; $p[$j] = $tmp;
    }

    return $p;
}

$size = count($phases) - 1;
$perm = range(0, $size);
$j = 0;

do { 
     foreach ($perm as $i) { $perms[$j][] = $phases[$i]; }
} while ($perm = nextPermutation($perm, $size) and ++$j);

foreach ($perms as $p) {
    $phasevariations[] = $p;
}

$maxValue = 0;
foreach ($phasevariations as $phasevariation) {
    $inputs = [0];
    
    $tempPrograms = $program;
    print_r($inputs);
    foreach ($phasevariation as $key => $phase) {
        array_unshift($inputs , $phase);
        $output = optRun($inputs, $tempPrograms, $key);
        $inputs[] = $output;
    }
    // all initialized, now loop until all end
    $end = false;
    $finishedCount = 0;
    while ($end == false) {
        foreach ($phasevariation as $key => $phase) {
            //die( $tempPrograms[$key]['optloc'].'sdsd');
            $output = optRun($inputs, $tempPrograms, $key);
            $inputs[] = $output;
            if ($tempPrograms[$key]['finished']) {
                $finishedCount++;
            }
            if ($finishedCount == 5)
            {
                
              $end = true;
            }
        }
    }
    if ($output > $maxValue) {
            $maxValue = $output;
    }
}

echo $maxValue;

function optRun(&$inputs, &$program, $amplifier)
{
    $output = null;
    echo 'optRun'.$amplifier;
    $codes = $program[$amplifier]['code'];
    $memLoc = $program[$amplifier]['optloc'];
    $found = false;
    while ($found == false) {
        $progLength = count($codes);
        
        $stepSize = 2;
        for ($i = $memLoc; $i < $progLength; $i+=$stepSize) {
            $instruction = array_map('intval', str_split($codes[$i]));
            $opCode = $instruction[count($instruction)-1];
            if ($instruction[count($instruction)-1] == 9 && $instruction[count($instruction)-2] == 9) {
                $program[$amplifier]['finished'] = true;
                $program[$amplifier]['code'] = $codes;
                return $output;
            }
            $param1Mode =  (array_key_exists(count($instruction)-3, $instruction)?$instruction[count($instruction) - 3]:0);
            $param2Mode =  (array_key_exists(count($instruction)-4, $instruction)?$instruction[count($instruction) - 4]:0);
            $param3Mode = (array_key_exists(count($instruction)-5, $instruction)?$instruction[count($instruction) - 5]:0);
            switch ($opCode) {
                case 1: // +
                   $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $param2 = ($param2Mode == 0?$codes[$codes[$i+2]]:$codes[$i+2]);
                   $sum = $param1 + $param2;
                   //echo "$sum = $param1 + $param2;\n";
                   $codes[$codes[$i+3]] = $sum;
                   $stepSize = 4;
                   break;
                case 2: // *
               $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $param2 = ($param2Mode == 0?$codes[$codes[$i+2]]:$codes[$i+2]);
                   
                   $sum = $param1 * $param2;
                   $codes[$codes[$i+3]] = $sum;
                   $stepSize = 4;
                   break;
                case 3: // input
                   if (count($inputs) == 0) {
                     $program[$amplifier]['optloc'] = $i;
                     $program[$amplifier]['code'] = $codes;
                     
                     return $output;
                   }
                   $codes[$codes[$i+1]] = array_shift($inputs);
                   $stepSize = 2;
                   break; 
                case 4: // output
                   $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $output = $param1;
                   $stepSize = 2;
                   break; 
                 case 5: // jump-if-true
                   $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $param2 = ($param2Mode == 0?$codes[$codes[$i+2]]:$codes[$i+2]);
                   if ($param1 != 0) {
                       $i = $param2;     
                       $stepSize = 0;
                   } else {
                       $stepSize = 3;
                   }
                   break; 
                  case 6: // jump-if-true
                   $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $param2 = ($param2Mode == 0?$codes[$codes[$i+2]]:$codes[$i+2]);
                   if ($param1 == 0) {
                       $i = $param2;
                       $stepSize = 0;
                   }else {
                       $stepSize = 3;
                   }
                   break; 
                 case 7:  
                   $stepSize = 4;
                   $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $param2 = ($param2Mode == 0?$codes[$codes[$i+2]]:$codes[$i+2]);
                   if ($param1 < $param2) {
                        $codes[$codes[$i+3]] = 1;
                   } else {
                        $codes[$codes[$i+3]] = 0;
                   }
                   break; 
                 case 8: // Opcode 8 is equals
                  $stepSize = 4;
                   $param1 = ($param1Mode == 0?$codes[$codes[$i+1]]:$codes[$i+1]);
                   $param2 = ($param2Mode == 0?$codes[$codes[$i+2]]:$codes[$i+2]);
                   if ($param1 == $param2) {
                        $codes[$codes[$i+3]] = 1;
                   } else {
                        $codes[$codes[$i+3]] = 0;
                   }
                   break; 
                   
                case 99:
                   $found = true;
                   $program[$amplifier]['finished'] = true;
                   $program[$amplifier]['code'] = $codes;
                   return $output;
            }
        }
    }
}
?>
